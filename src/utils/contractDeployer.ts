
import { ethers } from 'ethers';

// Import the GradeChain contract ABI and bytecode
// In a real-world scenario, these would be generated from the compiled contract
import { GRADECHAIN_CONTRACT_ABI } from './web3Utils';

// This is just for demo purposes, in a real application this would be the actual bytecode of the compiled contract
const GRADECHAIN_CONTRACT_BYTECODE = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108c7806100606000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063025e7c27146100675780632f54bf6e146100975780638da5cb5b146100c7578063a1a1d82a146100e5578063c26e96d014610115578063d0ebdbe714610145575b600080fd5b610081600480360381019061007c9190610660565b610175565b60405161008e9190610705565b60405180910390f35b6100b160048036038101906100ac9190610747565b6101b4565b6040516100be919061078c565b60405180910390f35b6100cf6101ca565b6040516100dc9190610705565b60405180910390f35b6100ff60048036038101906100fa91906107a7565b6101f3565b60405161010c91906107e3565b60405180910390f35b61012f600480360381019061012a91906107a7565b610237565b60405161013c91906107e3565b60405180910390f35b61015f600480360381019061015a9190610747565b61027b565b60405161016c919061078c565b60405180910390f35b6001818154811061018557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000816040516020016102069190610853565b604051602081830303815290604052805190602001209050919050565b60008160405160200161024a9190610853565b604051602081830303815290604052805190602001209050919050565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055905b919050565b60008135905061031381610899565b92915050565b600081519050610328816108b0565b92915050565b60008083601f84011261034457610343610864565b5b8235905067ffffffffffffffff81111561036157610360610864565b5b60208301915083600182028301111561037d5761037c610864565b5b9250929050565b60008135905061039381610899565b92915050565b6000602082840312156103af576103ae61086e565b5b60006103bd84828501610304565b91505092915050565b6000602082840312156103dc576103db61086e565b5b60006103ea84828501610319565b91505092915050565b600080602083850312156104095761040861086e565b5b600083013567ffffffffffffffff8111156104275761042661086e565b5b6104338582860161032d565b92509250509250929050565b6000602082840312156104545761045361086e565b5b600061046284828501610384565b91505092915050565b61047481610817565b82525050565b61048381610829565b82525050565b600061049682610896565b6104a08185610896565b93506104b0818560208601610835565b80840191505092915050565b60006104c8838561048b565b93506104d5838461048b565b82840190509392505050565b60006104ec82610896565b6104f68185610896565b9350610506818560208601610835565b61050f8161086e565b840191505092915050565b6000602082019050610530600083018461046b565b92915050565b6000602082019050818103600083015261054f81610478565b9050919050565b600060208201905081810360008301526105718184846104bc565b90509392505050565b600060608201905081810360008301526105948186886104bc565b90506105a3602083018461046b565b81810360408301526105b581846104e7565b9050969695505050505050565b60006020820190508181036000830152610596816104e7565b9050919050565b60006020820190508181036000830152610627818461048b565b905092915050565b6000819050919050565b61064281610630565b811461064d57600080fd5b50565b61065981610829565b811461066457600080fd5b50565b60006020828403121561067657610675610864565b5b600061068484828501610630565b91505092915050565b600061069982610829565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106cc576106cb610873565b5b600182019050919050565b60006106e282610829565b91506106ed83610829565b9250826106fd576106fc610878565b5b828204905092915050565b600060208201905061071e600083018461046b565b92915050565b61072d81610817565b811461073857600080fd5b50565b600060208284031215610759576107586107dd565b5b600061076784828501610724565b91505092915050565b610779816107d2565b811461078457600080fd5b50565b6000602082840312156107a0576107996107dd565b5b60006107ad84828501610770565b91505092915050565b6000602082840312156107bc576107bb6107dd565b5b60006107c984828501610784565b91505092915050565b6000819050919050565b600080fd5b60006108028261080d565b9050919050565b600061081482610817565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610853578082015181840152602081019050610838565b83811115610862576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b6108a28161087e565b81146108ad57600080fd5b50565b6108b88161087e565b81146108c357600080fd5b5056fea264697066735822122076f13f00b2d4e0b1b0b3bbd94eececb74bfa31c2cfe84e99bef33f61f45da3a364736f6c63430008070033";

export const deployContract = async (): Promise<string | null> => {
  try {
    if (!window.ethereum) {
      console.error('MetaMask not installed');
      return null;
    }
    
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    
    // Deploy the contract
    const factory = new ethers.ContractFactory(
      GRADECHAIN_CONTRACT_ABI,
      GRADECHAIN_CONTRACT_BYTECODE,
      signer
    );
    
    console.log('Deploying GradeChain contract...');
    const contract = await factory.deploy();
    
    // Wait for deployment to finish
    await contract.deployed();
    
    console.log('Contract deployed at:', contract.address);
    return contract.address;
  } catch (error) {
    console.error('Error deploying contract:', error);
    return null;
  }
};

export const getContractAddress = (): string => {
  // In a real app, this would be stored in a persistent storage like localStorage
  // For demo, we'll return a hardcoded address if the contract was already deployed
  const savedAddress = localStorage.getItem('gradeChainContractAddress');
  return savedAddress || '';
};

export const saveContractAddress = (address: string): void => {
  localStorage.setItem('gradeChainContractAddress', address);
};
